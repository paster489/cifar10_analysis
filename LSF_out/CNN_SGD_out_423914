loading ...
loaded conda.sh
sh shell detected
 
-------------------------------------------------------------------------------
main => start
 
-------------------------------------------------------------------------------
Datasets Load => start
 
Files already downloaded and verified
Files already downloaded and verified
 
-------------------------------------------------------------------------------
Train/Validation random split => start
 
-------------------------------------------------------------------------------
DataLoader => start
 
-------------------------------------------------------------------------------
To_device => start
 
-------------------------------------------------------------------------------
Train => start
 
Epoch [0], train_loss: 2.3030, train_acc: 0.1006, val_loss: 2.3032, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [1], train_loss: 2.3030, train_acc: 0.1006, val_loss: 2.3032, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [2], train_loss: 2.3029, train_acc: 0.1006, val_loss: 2.3032, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [3], train_loss: 2.3029, train_acc: 0.1007, val_loss: 2.3031, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [4], train_loss: 2.3029, train_acc: 0.1006, val_loss: 2.3031, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [5], train_loss: 2.3029, train_acc: 0.1006, val_loss: 2.3031, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [6], train_loss: 2.3028, train_acc: 0.1007, val_loss: 2.3030, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [7], train_loss: 2.3028, train_acc: 0.1006, val_loss: 2.3030, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [8], train_loss: 2.3028, train_acc: 0.1007, val_loss: 2.3030, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [9], train_loss: 2.3028, train_acc: 0.1006, val_loss: 2.3030, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [10], train_loss: 2.3027, train_acc: 0.1006, val_loss: 2.3029, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [11], train_loss: 2.3027, train_acc: 0.1006, val_loss: 2.3029, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [12], train_loss: 2.3027, train_acc: 0.1006, val_loss: 2.3029, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [13], train_loss: 2.3027, train_acc: 0.1007, val_loss: 2.3029, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [14], train_loss: 2.3027, train_acc: 0.1007, val_loss: 2.3029, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [15], train_loss: 2.3027, train_acc: 0.1006, val_loss: 2.3029, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [16], train_loss: 2.3027, train_acc: 0.1007, val_loss: 2.3028, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [17], train_loss: 2.3026, train_acc: 0.1007, val_loss: 2.3028, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [18], train_loss: 2.3026, train_acc: 0.1007, val_loss: 2.3028, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [19], train_loss: 2.3026, train_acc: 0.1006, val_loss: 2.3028, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [20], train_loss: 2.3026, train_acc: 0.1006, val_loss: 2.3028, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [21], train_loss: 2.3026, train_acc: 0.1006, val_loss: 2.3028, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [22], train_loss: 2.3026, train_acc: 0.1006, val_loss: 2.3028, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [23], train_loss: 2.3026, train_acc: 0.1007, val_loss: 2.3028, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [24], train_loss: 2.3026, train_acc: 0.1007, val_loss: 2.3028, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [25], train_loss: 2.3026, train_acc: 0.1007, val_loss: 2.3028, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [26], train_loss: 2.3026, train_acc: 0.1007, val_loss: 2.3028, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [27], train_loss: 2.3026, train_acc: 0.1006, val_loss: 2.3028, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [28], train_loss: 2.3026, train_acc: 0.1006, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [29], train_loss: 2.3026, train_acc: 0.1007, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [30], train_loss: 2.3026, train_acc: 0.1006, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [31], train_loss: 2.3025, train_acc: 0.1007, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [32], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [33], train_loss: 2.3025, train_acc: 0.1007, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [34], train_loss: 2.3025, train_acc: 0.1007, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [35], train_loss: 2.3025, train_acc: 0.1007, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [36], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [37], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [38], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [39], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [40], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [41], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [42], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [43], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [44], train_loss: 2.3025, train_acc: 0.1007, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [45], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [46], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [47], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [48], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [49], train_loss: 2.3025, train_acc: 0.1007, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [50], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [51], train_loss: 2.3025, train_acc: 0.1007, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [52], train_loss: 2.3025, train_acc: 0.1007, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [53], train_loss: 2.3025, train_acc: 0.1007, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [54], train_loss: 2.3025, train_acc: 0.1007, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [55], train_loss: 2.3025, train_acc: 0.1008, val_loss: 2.3027, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [56], train_loss: 2.3025, train_acc: 0.1007, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [57], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [58], train_loss: 2.3025, train_acc: 0.1007, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [59], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [60], train_loss: 2.3025, train_acc: 0.1007, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [61], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [62], train_loss: 2.3025, train_acc: 0.1007, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [63], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [64], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [65], train_loss: 2.3025, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [66], train_loss: 2.3024, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [67], train_loss: 2.3024, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [68], train_loss: 2.3024, train_acc: 0.1007, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [69], train_loss: 2.3024, train_acc: 0.1007, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [70], train_loss: 2.3024, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [71], train_loss: 2.3024, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [72], train_loss: 2.3024, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [73], train_loss: 2.3024, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [74], train_loss: 2.3024, train_acc: 0.1007, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [75], train_loss: 2.3024, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [76], train_loss: 2.3024, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [77], train_loss: 2.3024, train_acc: 0.1007, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [78], train_loss: 2.3024, train_acc: 0.1007, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [79], train_loss: 2.3024, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [80], train_loss: 2.3024, train_acc: 0.1007, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [81], train_loss: 2.3024, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [82], train_loss: 2.3024, train_acc: 0.1007, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [83], train_loss: 2.3024, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [84], train_loss: 2.3024, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [85], train_loss: 2.3024, train_acc: 0.1007, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [86], train_loss: 2.3024, train_acc: 0.1007, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [87], train_loss: 2.3024, train_acc: 0.1007, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [88], train_loss: 2.3024, train_acc: 0.1006, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [89], train_loss: 2.3024, train_acc: 0.1007, val_loss: 2.3026, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [90], train_loss: 2.3024, train_acc: 0.1008, val_loss: 2.3025, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [91], train_loss: 2.3024, train_acc: 0.1018, val_loss: 2.3025, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [92], train_loss: 2.3024, train_acc: 0.1016, val_loss: 2.3025, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [93], train_loss: 2.3024, train_acc: 0.1033, val_loss: 2.3025, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [94], train_loss: 2.3024, train_acc: 0.1026, val_loss: 2.3025, val_acc: 0.0937, val_precision: 0.0091, val_recall: 0.0937, val_f1: 0.0165
Epoch [95], train_loss: 2.3024, train_acc: 0.1029, val_loss: 2.3025, val_acc: 0.0941, val_precision: 0.0198, val_recall: 0.0941, val_f1: 0.0173
Epoch [96], train_loss: 2.3024, train_acc: 0.1022, val_loss: 2.3025, val_acc: 0.0943, val_precision: 0.0271, val_recall: 0.0943, val_f1: 0.0180
Epoch [97], train_loss: 2.3023, train_acc: 0.1031, val_loss: 2.3025, val_acc: 0.0957, val_precision: 0.0448, val_recall: 0.0957, val_f1: 0.0206
Epoch [98], train_loss: 2.3023, train_acc: 0.1055, val_loss: 2.3025, val_acc: 0.0961, val_precision: 0.0451, val_recall: 0.0961, val_f1: 0.0216
Epoch [99], train_loss: 2.3023, train_acc: 0.1063, val_loss: 2.3025, val_acc: 0.0968, val_precision: 0.0483, val_recall: 0.0968, val_f1: 0.0242
 
-------------------------------------------------------------------------------
Visualize trining => save images
 
-------------------------------------------------------------------------------
Load the model => start
 
-------------------------------------------------------------------------------
Check best/last models => start
 
Summary result of test set => best model => val_loss: 2.3023, val_acc: 0.1026, val_precision: 0.0574, val_recall: 0.1026, val_f1: 0.0286
Summary result of test set => last model => val_loss: 2.3023, val_acc: 0.1026, val_precision: 0.0574, val_recall: 0.1026, val_f1: 0.0286
 
-------------------------------------------------------------------------------
Test set evaluation (best model) => save results for postprocessing
 
** accuracy: 0.1051
--
confusion matrix
[[ 46   0   0  56 898   0   0   0   0   0]
 [  9   0   0  58 933   0   0   0   0   0]
 [ 10   0   0   9 981   0   0   0   0   0]
 [  7   0   0  11 982   0   0   0   0   0]
 [  1   0   0   5 994   0   0   0   0   0]
 [  2   0   0  33 965   0   0   0   0   0]
 [  2   0   0   9 989   0   0   0   0   0]
 [  2   0   0  14 984   0   0   0   0   0]
 [  6   0   0  92 902   0   0   0   0   0]
 [  7   0   0  41 952   0   0   0   0   0]]
--
classification report
              precision    recall  f1-score   support

    aircraft       0.50      0.05      0.08      1000
  automobile       0.00      0.00      0.00      1000
        bird       0.00      0.00      0.00      1000
         cat       0.03      0.01      0.02      1000
        deer       0.10      0.99      0.19      1000
         dog       0.00      0.00      0.00      1000
        frog       0.00      0.00      0.00      1000
       horse       0.00      0.00      0.00      1000
        ship       0.00      0.00      0.00      1000
       truck       0.00      0.00      0.00      1000

    accuracy                           0.11     10000
   macro avg       0.06      0.11      0.03     10000
weighted avg       0.06      0.11      0.03     10000

-------------------------------------------------------------------------------
Valid set evaluation (best model) => save results for postprocessing
 
** accuracy: 0.0972
--
confusion matrix
[[ 17   0   0  25 446   0   0   0   0   0]
 [  5   0   0  26 481   0   0   0   0   0]
 [  3   0   0   6 523   0   0   0   0   0]
 [  7   0   0   5 459   0   0   0   0   0]
 [  1   0   0   6 464   0   0   0   0   0]
 [  3   0   0  11 500   0   0   0   0   0]
 [  3   0   0   3 501   0   0   0   0   0]
 [  2   0   0   2 496   0   0   0   0   0]
 [  7   0   0  44 453   0   0   0   0   0]
 [  3   0   0  21 477   0   0   0   0   0]]
--
classification report
              precision    recall  f1-score   support

    aircraft       0.33      0.03      0.06       488
  automobile       0.00      0.00      0.00       512
        bird       0.00      0.00      0.00       532
         cat       0.03      0.01      0.02       471
        deer       0.10      0.99      0.18       471
         dog       0.00      0.00      0.00       514
        frog       0.00      0.00      0.00       507
       horse       0.00      0.00      0.00       500
        ship       0.00      0.00      0.00       504
       truck       0.00      0.00      0.00       501

    accuracy                           0.10      5000
   macro avg       0.05      0.10      0.03      5000
weighted avg       0.04      0.10      0.02      5000

-------------------------------------------------------------------------------
END OF CODE
-------------------------------------------------------------------------------
 

------------------------------------------------------------
Sender: LSF System <DoNotReply>
Subject: Job 423914: <cifar10> in cluster <wexac> Done

Job <cifar10> was submitted from host <agn01> by user <ingap> in cluster <wexac> at Wed Feb 28 08:24:57 2024
Job was executed on host(s) <hgn53>, in queue <waic-short>, as user <ingap> in cluster <wexac> at Wed Feb 28 08:26:52 2024
</home/projects/bagon/ingap> was used as the home directory.
</home/projects/bagon/ingap> was used as the working directory.
Started at Wed Feb 28 08:26:52 2024
Terminated at Wed Feb 28 08:35:29 2024
Results reported at Wed Feb 28 08:35:29 2024

Your job looked like:

------------------------------------------------------------
# LSBATCH: User input
#!/bin/bash
#BSUB -J cifar10                             
#BSUB -o /home/projects/bagon/ingap/LSF_out/CNN_SGD_out_%J        #/home/projects/bagon/ingap/torch_lightening/GPU_out_%J
#BSUB -e /home/projects/bagon/ingap/LSF_err/CNN_SGD_err_%J        #/home/projects/bagon/ingap/torch_lightening/GPU_err_%J
#BSUB -q waic-short  
#BSUB -m "waic_2023_gpu"                       
#BSUB -gpu num=1:j_exclusive=yes:gmem=30G    # Number of GPUs per node
#BSUB -R rusage[mem=10G]                     # Resource allocation per task
#BSUB -R affinity[thread*4]                  # Resource allocation per task

if [ -f ~/.bash_profile ]; then
  . ~/.bash_profile
elif [ -f ~/.profile ]; then
  . ~/.profile
fi
module purge;module load miniconda/23.3.1-0_environmentally;module load NCCL/2.12.12-GCCcore-11.3.0-CUDA-11.8.0;module load CUDA/11.8.0
. activate;conda deactivate;conda activate /home/projects/bagon/ingap/.conda/envs/torch_gpu_env # PL for MNIST
cd /home/projects/bagon/ingap/cifar10_analysis/cifar10_analysis/


# Reprodusability
#python cifar_10_train_rev_2.py --normalization "No" --val_size 10 --batch_size 128 --num_workers 4 --lr 0.001 --epochs 2 --optimization "Adam" --experiment_name "CNN_No_run_1" --model "CNN"
#python cifar_10_train_rev_2.py --normalization "No" --val_size 10 --batch_size 128 --num_workers 4 --lr 0.001 --epochs 2 --optimization "Adam" --experiment_name "CNN_No_run_2" --model "CNN"
#python cifar_10_train_rev_2.py --normalization "No" --val_size 10 --batch_size 128 --num_workers 4 --lr 0.001 --epochs 2 --optimization "Adam" --experiment_name "CNN_No_run_3" --model "CNN"
#python cifar_10_train_rev_2.py --normalization "No" --val_size 10 --batch_size 128 --num_workers 4 --lr 0.001 --epochs 2 --optimization "Adam" --experiment_name "CNN_No_run_4" --model "CNN"
#python cifar_10_train_rev_2.py --normalization "No" --val_size 10 --batch_size 128 --num_workers 4 --lr 0.001 --epochs 2 --optimization "Adam" --experiment_name "CNN_No_run_5" --model "CNN"

# Normalization check
#python cifar_10_train_rev_2.py --normalization "No" --val_size 10 --batch_size 128 --num_workers 4 --lr 0.001 --epochs 100 --optimization "Adam" --experiment_name "CNN_No" --model "CNN"
#python cifar_10_train_rev_2.py --normalization "N1" --val_size 10 --batch_size 128 --num_workers 4 --lr 0.001 --epochs 100 --optimization "Adam" --experiment_name "CNN_N1" --model "CNN"
#python cifar_10_train_rev_2.py --normalization "N2" --val_size 10 --batch_size 128 --num_workers 4 --lr 0.001 --epochs 100 --optimization "Adam" --experiment_name "CNN_N2" --model "CNN"
#python cifar_10_train_rev_2.py --normalization "N1_aug" --val_size 10 --batch_size 128 --num_workers 4 --lr 0.001 --epochs 100 --optimization "Adam" --experiment_name "CNN_N1_aug" --model "CNN"
#python cifar_10_train_rev_2.py --normalization "N2_aug" --val_size 10 --batch_size 128 --num_workers 4 --lr 0.001 --epochs 100 --optimization "Adam" --experiment_name "CNN_N2_aug" --model "CNN"

# Valid size
#python cifar_10_train_rev_2.py --normalization "No" --val_size 15 --batch_size 128 --num_workers 4 --lr 0.001 --epochs 100 --optimization "Adam" --experiment_name "CNN_val_15" --model "CNN"
#python cifar_10_train_rev_2.py --normalization "No" --val_size 20 --batch_size 128 --num_workers 4 --lr 0.001 --epochs 100 --optimization "Adam" --experiment_name "CNN_val_20" --model "CNN"
#python cifar_10_train_rev_2.py --normalization "No" --val_size 25 --batch_size 128 --num_workers 4 --lr 0.001 --epochs 100 --optimization "Adam" --experiment_name "CNN_val_25" --model "CNN"

# LR
#python cifar_10_train_rev_2.py --normalization "No" --val_size 10 --batch_size 128 --num_workers 4 --lr 0.005 --epochs 100 --optimization "Adam" --experiment_name "CNN_LR_005" --model "CNN"
#python cifar_10_train_rev_2.py --normalization "No" --val_size 10 --batch_size 128 --num_workers 4 --lr 0.007 --epochs 100 --optimization "Adam" --experiment_name "CNN_LR_007" --model "CNN"
#python cifar_10_train_rev_2.py --normalization "No" --val_size 10 --batch_size 128 --num_workers 4 --lr 0.009 --epochs 100 --optimization "Adam" --experiment_name "CNN_LR_009" --model "CNN"
#python cifar_10_train_rev_2.py --normalization "No" --val_size 10 --batch_size 128 --num_workers 4 --lr 0.0005 --epochs 100 --optimization "Adam" --experiment_name "CNN_LR_0005" --model "CNN"
#python cifar_10_train_rev_2.py --normalization "No" --val_size 10 --batch_size 128 --num_workers 4 --lr 0.0001 --epochs 100 --optimization "Adam" --experiment_name "CNN_LR_0001" --model "CNN"

# Optimizer
python cifar_10_train_rev_2.py --normalization "No" --val_size 10 --batch_size 128 --num_workers 4 --lr 0.001 --epochs 100 --optimization "SGD" --experiment_name "CNN_SGD" --model "CNN"

# Model

(... more ...)
------------------------------------------------------------

Successfully completed.

Resource usage summary:

    CPU time :                                   1488.00 sec.
    Max Memory :                                 3394 MB
    Average Memory :                             3251.07 MB
    Total Requested Memory :                     10240.00 MB
    Delta Memory :                               6846.00 MB
    Max Swap :                                   -
    Max Processes :                              8
    Max Threads :                                30
    Run time :                                   519 sec.
    Turnaround time :                            632 sec.

The output (if any) is above this job summary.



PS:

Read file </home/projects/bagon/ingap/LSF_err/CNN_SGD_err_423914> for stderr output of this job.

